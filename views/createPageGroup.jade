extends  layout/base

block getTitle
    - var titleVar = "Create PageGroup"  

block append headCss
    link(rel="stylesheet" href="/assets/css/third-party/bootstrap-combobox.css")

block append headScripts
    script(src="/assets/js/libs/third-party/bootstrap-combobox.js")
    script.
        function getChannelsObject(collection) {
            var computedObject = {};

            collection.forEach(function(itemObject) {
                var pageGroup = itemObject.pageGroup,
                    platform = itemObject.platform,
                    isRootProperty = !!(computedObject.hasOwnProperty(pageGroup) && computedObject[pageGroup]),
                    pageGroupObject, isPlatformValue;

                if (!isRootProperty) {
                    computedObject[pageGroup] = {
                        sampleUrl: itemObject.sampleUrl,
                        platforms: []
                    };
                }

                pageGroupObject = computedObject[pageGroup];
                isPlatformValue = !!(pageGroupObject.platforms && (pageGroupObject.platforms.indexOf(platform) > -1));

                if (!isPlatformValue) { pageGroupObject.platforms.push(platform); }
            });

            return computedObject;
        }

        function DataModel() {
            this.channels = !{JSON.stringify(channelsCollection)};
            this.model = getChannelsObject(this.channels);
        }
        var dataModel = new DataModel();

        $(document).ready(function() {
            $('.combobox').combobox();

            function getDomain(url) {
                var a = document.createElement('a');
                a.href = url;
                return a.hostname;
            };

            function disableSampleUrlValidation() {
                $('#createPg').prop('disabled', false);
                $('#error-message').html('');   
            };

            function sampleUrlValidation(val) {
                if(val && (getDomain(val) !== getDomain('#{siteDomain}'))) {
                    $('#createPg').prop('disabled', true);
                    $('#error-message').html('The Sample URL should be from your website only');   
                }
                else {
                    disableSampleUrlValidation();
                }
            };

            function resetUIBasedOnPageGroup() {
                $('#sampleUrl').val('');
                $('.js-select-platform')
                    .val('')
                    .find('> .js-select-option')
                    .removeAttr('disabled')
                    .removeClass('disabled');
                return;
            }

            function updateUIBasedOnPageGroup(pageGroup) {
                var $sampleUrlEl = $('#sampleUrl'),
                    pageGroupData = dataModel.model[pageGroup],
                    isPageGroupData = !!(pageGroupData && Object.keys(pageGroupData).length);

                if (!isPageGroupData) {
                    resetUIBasedOnPageGroup();
                    return;
                }

                $sampleUrlEl.val(pageGroupData.sampleUrl);
                pageGroupData.platforms.forEach(function(platform) {
                    var optionSelector = '.js-select-option-' + platform;

                    $(optionSelector)
                        .attr('disabled', true)
                        .addClass('disabled');
                });
            }

            $('#forceSampleUrl').on('change', function() {
                var val = $('#sampleUrl').val(),
                    sampleUrlForced = $(this).prop('checked');
                !sampleUrlForced ? sampleUrlValidation(val) : disableSampleUrlValidation();
            });

            $('#sampleUrl').on('keyup', function() {
                var val = $(this).val(),
                    sampleUrlForced = $('#forceSampleUrl').prop('checked');

                !sampleUrlForced ? sampleUrlValidation(val) : disableSampleUrlValidation();
            });

            $('.combobox').off('change').on('change', function(e) {
                var $el = $(e.target),
                    isDropDownEl = !!($el.get(0).tagName === 'SELECT'),
                    isInputEl = !!($el.get(0).tagName === 'INPUT'),
                    isValueValid = !!($el.val()),
                    elValue;
                
                if (isInputEl && !isValueValid) {
                    resetUIBasedOnPageGroup();
                }

                if (!isDropDownEl) { return; }
                
                elValue = $el.val();
                updateUIBasedOnPageGroup(elValue);
            });
        });  

block bodyContent
    include layout/sideBar
    
    .pageContainer.page-container
        include layout/header

        // Page Content Starts Here
        .pageContentWrapper.page-content
            .pageContentInner.page-content--inner

                #widgetsArea.row
                    .mb-30
                        .controlAdpushupWrap
                            h3.title.m-All-0.clearfix
                                a.pull-left Create New PageGroup - 
                                    span!= utils.domanize(siteDomain)
                            form(method="post", action="createPagegroup")
                                input(type="hidden" value="#{siteId}" name="siteId")
                                .row.input-wrapper
                                    .col-sm-2
                                        label Page Group Name
                                    .col-sm-3
                                        if channels.length > 0
                                            select(class="combobox input-large form-control" name="pageGroupName")
                                                option(value="" selected="selected") Please enter Page Group Name
                                                for channel in channels
                                                    option(value="#{channel}")!= channel
                                        else 
                                            input.form-control(required, name="pageGroupName", type="text" placeholder="Please enter Page Group Name")
                                .row.input-wrapper
                                    .col-sm-2
                                        label Sample Url
                                    .col-sm-3
                                        input.form-control#sampleUrl(required, name="sampleUrl", type="url" placeholder="Please enter Sample Url") 
                                        .mT-10
                                            label.mR-5 Force Sample Url 
                                            input(type="checkbox" id="forceSampleUrl" name="forceSampleUrl")
                                .row.input-wrapper
                                    .col-sm-2
                                        label Device
                                    .col-sm-3
                                        .styleSelect
                                            select.js-select-platform(required, name="device")
                                                option(value="") Select device
                                                option.js-select-option.js-select-option-DESKTOP(value="desktop") Desktop
                                                option.js-select-option.js-select-option-TABLET(value="tablet") Tablet
                                                option.js-select-option.js-select-option-MOBILE(value="mobile") Mobile
                                .row.input-wrapper
                                    .col-sm-4
                                        h3#error-message.error-message!= error
                                        button#createPg.btn.btn-lightBg.btn-default Create Page Group                                             
                                                                              
                                           