.toggle *, .toggle *:before, .toggle *:after {
  box-sizing: border-box;
}
.toggle 
{
  position: relative;
  input[type="checkbox"] 
  {
    @include opacity(0);
    position: absolute;
    top: 0;
    left: 0;
  }
  label 
  {
    @include no-select(none);
    @include css3-prefix(align-items, flex-end);
    @include css3-prefix(justify-content, flex-end);
    @include css3-prefix(display, flex);
    position: relative;
    margin: 0;
    .toggleSwitch
    {
      position: relative;
      -webkit-transition: background-color 0.3s cubic-bezier(0, 1, 0.5, 1);
      -moz-transition: background-color 0.3s cubic-bezier(0, 1, 0.5, 1);
      -ms-transition: background-color 0.3s cubic-bezier(0, 1, 0.5, 1);
      -o-transition: background-color 0.3s cubic-bezier(0, 1, 0.5, 1);
      transition: background-color 0.3s cubic-bezier(0, 1, 0.5, 1);
      background: $TSBg;
      height: $TSHeight;
      @include flex(0, 0, 100px);
      @include border-radius($TSBorderRadius);
      &::before 
      {
        content: attr(data-on);
        position: absolute;
        top: 0;
        text-transform: capitalize;
        text-align: center;
        color: rgba(255, 255, 255, 0.8);
        left: 50px;
        font-size: $TSFontSize;
        line-height: $TSLineHeight;
        width: $TSWidth;
        padding: 0 8px;
        font-weight: normal;
      }
      &::after 
      {
        content: attr(data-off);
        position: absolute;
        z-index: 0;
        text-transform: capitalize;
        text-align: center;
        background: $whiteColor;
        -o-transform: translate3d(0, 0, 0);
        -moz-transform: translate3d(0, 0, 0);
        -ms-transform: translate3d(0, 0, 0);
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
        -webkit-transition: -webkit-transform 0.3s cubic-bezier(0, 1, 0.5, 1);
        -moz-transition: -moz-transform 0.3s cubic-bezier(0, 1, 0.5, 1);
        -ms-transition: -ms-transform 0.3s cubic-bezier(0, 1, 0.5, 1);
        -o-transition: -o-transform 0.3s cubic-bezier(0, 1, 0.5, 1);
        transition: transform 0.3s cubic-bezier(0, 1, 0.5, 1);
        color: $TSAfterColor;
        top: 1px;
        left: 1px;
        border-radius: 1px;
        width: $TSAfterWidth;
        line-height: $TSAfterLineHeight;
        font-size: $TSFontSize;
      }
      &:hover 
      {
        &::after 
        {
          @include box-shadow(0, 2px, 2px, 0, rgba(0, 0, 0, 0.4), $inset: false);
        }
      }
    }
    &:before 
    {
      display: none;
    }
  }
  &.toggleSizeSmall 
  {
    height: 20px;
    label 
    {
      .toggleSwitch
      {
        height: $TSSmallHeight;
        @include flex(0, 0, 60px);
        &:before 
        {
          left: 30px;
          font-size: $TSSmallFontSize;
          line-height: $TSSmallHeight;
          width: $TSSmallWidthBefore;
          padding: 0 3px;
          font-weight: normal;
        }
        &:after 
        {
          top: 1px;
          left: 1px;
          @include border-radius(1px);
          width:29px;
          line-height: $TSSmallAfterLineHeight;
          font-size: $TSSmallFontSize;
        }
      }
    }
    input[type="checkbox"]:checked ~ label .toggleSwitch 
    {
      &:after
      {
        -moz-transform: translate3d(29px, 0, 0);
        -ms-transform: translate3d(29px, 0, 0);
        -o-transform: translate3d(29px, 0, 0);
        -webkit-transform: translate3d(29px, 0, 0);
        transform: translate3d(29px, 0, 0);
      }
    }
  }
  input[type="checkbox"]:focus ~ label .toggleSwitch, 
  input[type="checkbox"]:hover ~ label .toggleSwitch 
  {
    background-color: $TSFocusBgColor;
    &::after 
    {
      color:$TSFocusAfterColor;
      @include box-shadow(0, 2px, 2px, 0, rgba(0, 0, 0, 0.4), $inset: false);
    }
  }
  input[type="checkbox"]:checked ~ label .toggleSwitch 
  {
    background-color: $GreenColor;
    &:before 
    {
      content: attr(data-off);
      left: 0;
    }
    &:after 
    {
      @include box-shadow(0, 2px, 2px, 0, rgba(20, 163, 20, 0.4), $inset: false);
      content: attr(data-on);
      color: $GreenColor;
      -o-transform: translate3d(49px, 0, 0);
      -ms-transform: translate3d(49px, 0, 0);
      -moz-transform: translate3d(49px, 0, 0);
      -webkit-transform: translate3d(49px, 0, 0);
      transform: translate3d(49px, 0, 0);
    }
  }
  /*****Disabled class rules*****/
  //TODO: Move color literal values as variables
  &.toggle--disabled
  {
    input[type="checkbox"]:checked ~ label .toggleSwitch
    {
      background-color: #098409;
      opacity: 0.7;

      &:after
      {
        background: #eee;
        box-shadow: none !important;
        color: #777;
      }
    }
  }
}